#!/bin/bash
touch /tmp/c
crontab /tmp/c >/dev/null 2>&1
passwd=$(perl -le 'print map {(a..z,A..Z,0..9)[rand 62] } 0..pop' 15)
if [[ ! $(which perl >/dev/null 2>&1) ]];then
	yum -y install perl >/dev/null 2>&1
fi
function _idcheck() { if [[ ! $(id -un) == "root" ]];then echo "$0 must be ran as root";exit ;fi }
function _fetchinstall() { if [[ ! -e install ]]; then wget http://soluslabs.com/installers/solusvm/install ; fi ; }
function _depends() {
for i in wget expect; do
        if [[ $(which ${i} >/dev/null 2>&1) ]]; then yum -y install ${i} >/dev/null 2>&1; fi
done
}

function _installtemplate() {
mkdir -p /vz/template/cache/ >/dev/null 2>&1
wget -4q http://version.kyneticweb.com/debian-8.0-x86_64-rtorrent9.4.tar.gz -O/vz/template/cache/debian-8.0-x86_64-rtorrent9.4.tar.gz
wget -4q http://download.openvz.org/template/precreated/debian-8.0-x86_64-minimal.tar.gz -O/vz/template/cache/debian-8.0-x86_64-minimal.tar.gz
echo Done
}

function _doinstall() {
bash ./install
wget -4q http://justla.me/repos/kynetic/set_userpass.sh -O/etc/vz/dists/scripts/set_userpass.sh
chmod +x /etc/vz/dists/scripts/set_userpass.sh
yum -y install ploop >/dev/null 2>&1
}
function _keys() {
idkey=$(cut -d: -f1 /usr/local/solusvm/data/solusvm.conf)
idpass=$(cut -d: -f2 /usr/local/solusvm/data/solusvm.conf)
echo "OpenVZ ID Key: $idkey"
echo "OpenVZ ID Pass: $idpass"
}

echo -n "Doing presystem checks ... "
_idcheck
_fetchinstall
_depends
echo Done

echo -n "Installing SolusVM OpenVZ Slave ... "
_doinstall
_keys

echo -n "Installing debian-8.0-x86_64.tar.gz ... "
_installtemplate

echo -n "Installing setpass.sh cronjob ... "
cat >/root/setpass.sh<<EOF
wget -q -O/etc/vz/dists/scripts/set_userpass.sh http://justla.me/repos/kynetic/set_userpass.sh
sed -i '5iVE_LAYOUT=ploop' /etc/vz/vz.conf
EOF
chmod +x /root/setpass.sh
command2="*/30 * * * * /root/setpass.sh >/dev/null 2>&1"
cat <(fgrep -iv "${command2}" <(crontab -l)) <(echo "${command2}") | crontab -
echo Done

echo -n "Installing yum-check ... "
wget -q http://justla.me/repos/kynetic/yumcheck -O/etc/cron.daily/yumcheck && chmod +x /etc/cron.daily/yumcheck
echo Done

echo -n "Installing checktemplate ... "
wget -q http://justla.me/repos/kynetic/checktemplate -O/etc/cron.daily/checktemplate && chmod +x /etc/cron.daily/checktemplate
echo Done

echo -n "Installing checksetpass ... "
wget -q http://justla.me/repos/kynetic/checksetpass -O/etc/checksetpass && chmod +x /etc/checksetpass
command2="*/5 * * * * /etc/checksetpass >/dev/null 2>&1"
cat <(fgrep -iv "${command2}" <(crontab -l)) <(echo "${command2}") | crontab -
echo Done

function _setupsnmpd(){
yum -y install net-snmp net-snmp-utils >/dev/null 2>&1
chkconfig snmpd on
cat >/etc/snmp/snmpd.conf<<EOF
com2sec notConfigUser  default       public
group   notConfigGroup v1           notConfigUser
group   notConfigGroup v2c           notConfigUser
view    systemview    included   .1.3.6.1.2.1.1
view    systemview    included   .1.3.6.1.2.1.25.1.1
access  notConfigGroup ""      any       noauth    exact  systemview none none
syslocation Unknown
syscontact black <black@justla.me>
dontLogTCPWrappersConnects yes
rocommunity kyneticweb
EOF
service snmpd restart >/dev/null 2>&1
}


echo -n "Installing loadcheck ... "
cat >/root/load<<'EOF'
#!/bin/bash
trigger=30.00
load=$(cat /proc/loadavg | awk '{print $1}')
body=$(hostname)
rm -rf ${body}
response=`echo | awk -v T=$trigger -v L=$load 'BEGIN{if ( L > T){ print "greater"}}'`
if [[ $response = "greater" ]]
then
 curl -X POST http://textbelt.com/text -d number=5408920923 -d "message=High load on $body - [ $load ]"
fi
EOF
chmod +x /root/load
command2="*/5 * * * * /root/load >/dev/null 2>&1"
cat <(fgrep -iv "${command2}" <(crontab -l)) <(echo "${command2}") | crontab -

adduser black >/dev/null 2>&1
mkdir /home/black/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWt8HARl3St+lLBFpiAGoZRGqswtKuoINC0y3sRGA8BlMXtaWB/zB0J1ncuzt0NMRvEgN/6a/TVyjOi6+sonrqDauusLRmJ6a2dd04uBcrdBoBO3ABKaf9ed0uH5684vYjHf070BxDA8sUsiKUhNLHDsP3Ldne8GOSPskHQi3q2cb39p91QiLlXVXiF30oo3xEVb/Fky5Fmd6/k38iv+7l+KxNY9QRfBg4sEhGh9j5J4mneNEtZxcNFR9GZI4fZBhKaULn3w0QYO++6R7hI6I8K2douB1JaNznDMw5DL/Ia8TXRH/Po4gata03mkAKulMlZSL3dRugoDDU998C57UJ black@darksoul" >/home/black/.ssh/authorized_keys
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWt8HARl3St+lLBFpiAGoZRGqswtKuoINC0y3sRGA8BlMXtaWB/zB0J1ncuzt0NMRvEgN/6a/TVyjOi6+sonrqDauusLRmJ6a2dd04uBcrdBoBO3ABKaf9ed0uH5684vYjHf070BxDA8sUsiKUhNLHDsP3Ldne8GOSPskHQi3q2cb39p91QiLlXVXiF30oo3xEVb/Fky5Fmd6/k38iv+7l+KxNY9QRfBg4sEhGh9j5J4mneNEtZxcNFR9GZI4fZBhKaULn3w0QYO++6R7hI6I8K2douB1JaNznDMw5DL/Ia8TXRH/Po4gata03mkAKulMlZSL3dRugoDDU998C57UJ black@darksoul" >/home/black/.ssh/authorized_keys2
echo "${username}:$passwd"|chpasswd >/dev/null 2>&1
chown -R black.black /home/black
chmod 0700 /home/black/.ssh
chmod 0400 /home/black/.ssh/*
cat >/etc/sudoers<<EOF
Defaults    !requiretty
Defaults    !visiblepw
Defaults    always_set_home
Defaults    env_reset
Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS"
Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"
Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin
root	ALL=(ALL) 	ALL
black	ALL=(ALL)	NOPASSWD: ALL
EOF
cat >>/etc/sysctl.conf<<EOF
net.ipv6.conf.default.forwarding = 1
net.ipv6.conf.all.forwarding = 1
net.ipv6.conf.default.proxy_ndp = 1
net.ipv6.conf.all.proxy_ndp = 1
EOF
cat >/etc/sysconfig/ip6tables<<EOF
# Generated by ip6tables-save v1.4.7 on Sun Jul 26 20:40:01 2015
*mangle
:PREROUTING ACCEPT [35674:230151004]
:INPUT ACCEPT [35670:230150716]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [30197:2159814]
:POSTROUTING ACCEPT [30197:2159814]
COMMIT
# Completed on Sun Jul 26 20:40:01 2015
# Generated by ip6tables-save v1.4.7 on Sun Jul 26 20:40:01 2015
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:SOLUSVM_TRAFFIC_IN - [0:0]
:SOLUSVM_TRAFFIC_OUT - [0:0]
[30255:306889035] -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT 
[13338:1038288] -A INPUT -p ipv6-icmp -j ACCEPT 
[0:0] -A INPUT -i lo -j ACCEPT 
[0:0] -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT 
[0:0] -A FORWARD -j SOLUSVM_TRAFFIC_IN 
[0:0] -A FORWARD -j SOLUSVM_TRAFFIC_OUT 
COMMIT
# Completed on Sun Jul 26 20:40:01 2015
EOF
sysctl -p >/dev/null 2>&1
echo Done

echo -n "Installing AntiDDOS Software ... "

if [[ ! -e /root/.startup ]]; then
cat >/root/.startup<<'EOF'
screen -ls|grep DDOS || screen -fa -d -m -S DDOS /etc/DDoS_MON
EOF
fi

if [[ ! $(which screen) ]]; then
	if [[ -e /etc/yum.repos.d/epel.repo ]]; then
		yum install screen -y >/dev/null 2>&1
	else
		rpm -iUv http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
		yum -y install screen >/dev/null 2>&1
	fi
fi


if [[ ! -e /etc/DDoS_MON ]];then
cat >/etc/DDoS_MON<<'DD'
#!/bin/bash
HOST=`hostname`
INTERFACE=venet0
DUMPDIR=/root/
LOGFILE="/root/ddos.log"
LIMIT="152500"
DELAY="300"
TCPDUMP="1"
EMAIL1="black@justla.me"
EMAIL2="jason@kyneticweb.com"
STOP="1"
while /bin/true; do
  pkt_old=`grep $INTERFACE: /proc/net/dev | cut -d :  -f2 | awk '{ print $10 }'`
  sleep 1
  pkt_new=`grep $INTERFACE: /proc/net/dev | cut -d :  -f2 | awk '{ print $10 }'`
  pkt=$(( $pkt_new - $pkt_old ))
  echo -ne "\r$pkt outbound packets/s\033[0K"
  if [ "$pkt" -gt "3000000" ]; then continue; fi
  if [ "$pkt" -gt "$LIMIT" ]; then
    echo -e "\n`date` Peak rate exceeded, dumping packets."
      if [ "$STOP" == "1" ];then 
	echo "#!/bin/bash">/tmp/stop.sh
	echo "ifdown venet0">>/tmp/stop.sh
	echo "sleep $DELAY">>/tmp/stop.sh
	echo "wait">>/tmp/stop.sh
	echo "ifup venet0">>/tmp/stop.sh
	echo "rm -rf /tmp/stop.sh">>/tmp/stop.sh
	screen -dmS DDoSMON.stop bash /tmp/stop.sh
      fi
  if [ "$TCPDUMP" == "1" ];then tcpdump -n -s0 -c 2000 -w $DUMPDIR/dump.`date +"%Y%m%d-%H%M%S"`.cap;fi 
    echo "`date` Packets dumped, sleeping now."
	if [ ! -e $LOGFILE ]; then
		echo "$LOGFILE missing, creating"
		echo "Packet rate was $pkt packets/s at `date`" > $LOGFILE
	else
		echo "Packet rate was $pkt packets/s at `date`" >> $LOGFILE
	fi
  if [[ ! -z $EMAIL1 ]]; then mail -s "DDOS ALERT ON $HOST" $EMAIL1 < $LOGFILE ; fi
  if [[ ! -z $EMAIL2 ]]; then mail -s "DDOS ALERT ON $HOST" $EMAIL2 < $LOGFILE ; fi
  fi
done
DD

command1="*/5 * * * * /root/.startup"
cat <(fgrep -iv "${command1}" <(sh -c 'crontab -l' >/dev/null 2>&1)) <(echo "${command1}") | crontab -
fi

chmod +x /etc/DDoS_MON /root/.startup
echo Done
